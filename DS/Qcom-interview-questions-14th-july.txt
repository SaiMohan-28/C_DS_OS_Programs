
1.
    char *p = "hello";
    output = "h1llo";

-->As Char pointer stores the base address of the string, We cannot modify the string using index.
-->the data stored in data segment under read only segment
	
2.
	int i = 300;
	float a = -200
	char c = 300
	char *p = "hello"
	char arr[] = "world";

	printf("%d  %d",sizeof(*p),sizeof(arr));

-->size of *p will print 1 because it is declared as char pointer and sizeof p will give 8 bytes 
-->size of arr will give size of string including NULL character i.e 6(where strlen will give 5)this is the difference between them.

3. 
	char *c = "hello";
	char cr[] = "hello";
	
	c = "world";
	cr = "world";

	what happens now ?

-->we cannot assign string to array for this we need to use string copy function to copy into array//cr="world"
-->we can assign new string to c// c="world"	
	
4.
	int *i, *j;
	i = 0x12345678;
	j = 0x11111111;
	j++;
	printf("%d, %p", *i, j);
	
	what is the output ?
	
--> i is pointing to an address if we deference it the value inside the address will print.
--> Same with j as well it is pointing to an address, if we increment j	it will point to 0x11111115

6.
	int a;
	char *x;
	x = (char *) &a;
	a = 512;		00000000 00000000 00000010 00000000
	x[0] = 1;		00000000 00000000 00000000 00000001
	x[1] = 2;		00000000 00000000 00000010 00000000
	printf("%dn",a);	00000000 00000000 00000010 00000001 == 513

	what is the output ?
	


